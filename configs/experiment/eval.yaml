# @package _global_

diffuser:
  dir: /output/hydra_log/RL_Diffuser/runs/2023-09-05_09-44-51_629629/
  epoch: last

guide:
  # _target_: diffuser.sampling.NoTrainGuideYLower
  _target_: diffuser.sampling.Maze2dTargetGuide
  target: [0,0]

controller:
  # dir: ${oc.env:UOUTDIR}/hydra_log/RL_Diffuser/runs/2023-09-05_09-13-20_740659/
  # dir: ${oc.env:UOUTDIR}/hydra_log/RL_Diffuser/multiruns/2023-08-30_08-31-28_530341/0
  turn_on: true
  dir: /output/hydra_log/RL_Diffuser_Debug/multiruns/2023-09-08_08-08-06_932140/0
  epoch: last

policy:
  _target_: diffuser.sampling.GuidedPolicy
  _partial_: true
  # guide: in python
  # diffusion_model: in python
  # normalizer:  in python
  preprocess_fns: []
  # the following are **sample_kwargs
  sample_fn: 
    # _target_: diffuser.sampling.n_step_guided_p_sample
    _target_: diffuser.sampling.n_step_guided_p_sample_freedom_timetravel
    _partial_: true
  scale: 1.0
  n_guide_steps: 1 # ! does not used, only use one step + time travel
  t_stopgrad: 2 # positive: grad[t < t_stopgrad] = 0; bigger is noise
  scale_grad_by_std: true
  grad_interval: [0.0, 1.0]
  travel_repeat: 1 # time travel
  travel_interval: [0.0,1.0] # if float, would use [horizon*travel_interval, horizon]

plan_freq: 2.0

runner:
  _target_: src.runner.EvalRunner
  _partial_: true

# common - for all tasks (task_name, tags, output_dir, device)
algorithm_name: "DefaultAlgName"
task_name: "EvalDiffuser"
tags: ["debug"]